name: Scheduled Shorpy Scraper

on:
  schedule:
    # Run every 6 hours (at minute 0 of hours 0, 6, 12, and 18)
    - cron: '0 0,6,12,18 * * *'
  # Allow manual triggering
  workflow_dispatch:

# Permissions needed for the workflow
permissions:
  contents: write  # Needed for pushing to the repository

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Verify secrets
        run: |
          if [ -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" ]; then
            echo "::warning::TELEGRAM_BOT_TOKEN is not set. Please add it to the repository secrets."
            exit 1
          fi
          if [ -z "${{ secrets.TELEGRAM_CHANNEL_ID }}" ]; then
            echo "::warning::TELEGRAM_CHANNEL_ID is not set. Please add it to the repository secrets."
            exit 1
          fi
          echo "Secrets are properly configured"
      
      - name: Initialize database and directories
        run: |
          # Create directories
          mkdir -p scraped_posts
          mkdir -p temp_images
          
          # Run the initialization script
          python init_db.py
          
          # Check if the database was created successfully
          if [ -f "shorpy_data.db" ]; then
            echo "Database initialized successfully"
            sqlite3 shorpy_data.db ".tables"
          else
            echo "::error::Failed to initialize database"
            exit 1
          fi

      - name: Run scraper
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}
        run: python main.py --run-once --verbose --silent
        
      - name: Debug DB file
        run: |
          echo "Checking for database file after script execution:"
          ls -la
          if [ -f "shorpy_data.db" ]; then
            echo "Database file exists"
            file shorpy_data.db
            stat shorpy_data.db
            echo "Database contents:"
            sqlite3 shorpy_data.db ".tables"
            sqlite3 shorpy_data.db "SELECT COUNT(*) FROM parsed_posts;"
            sqlite3 shorpy_data.db "SELECT COUNT(*) FROM checkpoints;"
          else
            echo "Database file does not exist"
          fi

      - name: Commit database changes
        run: python commit_db.py 